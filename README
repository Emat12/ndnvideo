README:

this is a video toolkit it publishes and plays live video in a segmented stream that also seeks from buffer in CCNx repo.

more detailed readme to come; meanwhile this should help the early adopters. 

ignore /sandbox, this readme applies to just /videostreaming folder

installing:

	see 'BUILD'

usage:

playing remote stream:

make sure ccnd is running, and has a route to a testbed node.


./play.py /ndn/ucla.edu/apps/video


if that doesn't work, see 'troubleshooting', below. 


publishing local video:

make sure CCNR_DIRECTORY is set and sourced (recommend ~/.profile or ~/.ccnx/)
make sure ccnd & ccnr (your local repo) are running, and are routed (for others to access)

if you don't have a working video URI, make one with video_sink:

python video_sink.py [desired URI]

then you have a URI you can play via above. It auto-selects first video device.


note:  you may need to manually create CCNR_DIRECTORY/import/ directory


pending:

instructions on how to use a file, rather than a capture device, to create a stream


Troubleshooting:

make sure gstreamer works independently of ndnvideo.

for instance, sudo apt-get install gstreamer-tools
 then 

ie - try

gst-launch -v -m autovideosrc ! xvimagesink

if this doesn't work, try 
xvinfo
if you don't have any adapters… you'll need a better video card and driver - in which case you can likely use ximagesink.

however you may need to videoscale to specific supported size listed by: 

gst-inspect ximagesink


./ccn_launch.py VideoSrc location=/ndn/ucla.edu/apps/video/hydra/ ! \
   ffdec_h264 ! aasink

(this will render video using ascii :)
